/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
    "/cats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new cat
         * @description This operation allows you to create a new cat.
         */
        post: operations["CatsController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/cats/${string}`]: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        /**
         * find a new cat
         * @description find a cat by id
         */
        get: operations["CatsController_findOne"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dogs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * find all dog
         * @description this operation find all dogs
         */
        get: operations["DogsController_findAll"];
        put?: never;
        post: operations["DogsController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/dogs/${string}`]: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        get: operations["DogsController_findOne"];
        put: operations["DogsController_update"];
        post?: never;
        delete: operations["DogsController_remove"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/humans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["HumansController_findAll"];
        put?: never;
        post: operations["HumansController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    [path: `/humans/${string}`]: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        get: operations["HumansController_findOne"];
        put?: never;
        post?: never;
        delete: operations["HumansController_remove"];
        options?: never;
        head?: never;
        patch: operations["HumansController_update"];
        trace?: never;
    };
};
export type webhooks = Record<string, never>;
export type components = {
    schemas: {
        CreateCatDto: {
            /** @enum {string} */
            breed: CreateCatDtoBreed;
            name: string;
            age: number;
        };
        ShowCatResponse: {
            /**
             * @description The age of the Cat
             * @example 1
             */
            age: number;
            /**
             * @description The breed of the Cat
             * @example tesla
             * @enum {string}
             */
            breed: ShowCatResponseBreed;
            id: number;
            name: string;
        };
        PaginatedResponse: {
            total: number;
            limit: number;
            offset: number;
            data: string[];
        };
        ShowDogResponse: {
            /**
             * @description The breed of the Dog
             * @example lg
             * @enum {string}
             */
            breed: ShowDogResponseBreed;
            id: number;
            name: string;
            age: number;
        };
        CreateDogDto: {
            /** @enum {string} */
            breed: CreateDogDtoBreed;
            name: string;
            age: number;
        };
        CreateHumanDto: {
            pets: (components["schemas"]["CreateCatDto"] | components["schemas"]["CreateDogDto"])[];
            name: string;
            age: number;
        };
        ShowHumanResponse: {
            pets: components["schemas"]["PaginatedResponse"];
            id: number;
            name: string;
            age: number;
        };
        UpdateHumanDto: {
            pets: (components["schemas"]["CreateCatDto"] | components["schemas"]["CreateDogDto"])[];
            age: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
};
export type CreateCatDto = components['schemas']['CreateCatDto'];
export type ShowCatResponse = components['schemas']['ShowCatResponse'];
export type PaginatedResponse = components['schemas']['PaginatedResponse'];
export type ShowDogResponse = components['schemas']['ShowDogResponse'];
export type CreateDogDto = components['schemas']['CreateDogDto'];
export type CreateHumanDto = components['schemas']['CreateHumanDto'];
export type ShowHumanResponse = components['schemas']['ShowHumanResponse'];
export type UpdateHumanDto = components['schemas']['UpdateHumanDto'];
export type $defs = Record<string, never>;
export interface operations {
    CatsController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCatDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShowCatResponse"];
                };
            };
            /** @description Bad Request. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Something went wrong. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CatsController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShowCatResponse"];
                };
            };
            /** @description Bad Request. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Something went wrong. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DogsController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse"] & {
                        data?: components["schemas"]["ShowDogResponse"][];
                    };
                };
            };
            /** @description Bad Request. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Something went wrong. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DogsController_create: {
        parameters: {
            query?: never;
            header?: {
                /** @description Custom header */
                "X-custom"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateDogDto"];
            };
        };
        responses: {
            /** @description create dog */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description request is ambiguous */
            300: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DogsController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShowDogResponse"];
                };
            };
        };
    };
    DogsController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateDogDto"][];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DogsController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    HumansController_findAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponse"] & {
                        data?: components["schemas"]["ShowHumanResponse"][];
                    };
                };
            };
        };
    };
    HumansController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateHumanDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShowHumanResponse"];
                };
            };
        };
    };
    HumansController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ShowHumanResponse"];
                };
            };
        };
    };
    HumansController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    HumansController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateHumanDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
export enum CreateCatDtoBreed {
    apple = "apple",
    tesla = "tesla",
    micro_soft = "micro-soft",
    nvidia = "nvidia"
}
export enum ShowCatResponseBreed {
    apple = "apple",
    tesla = "tesla",
    micro_soft = "micro-soft",
    nvidia = "nvidia"
}
export enum ShowDogResponseBreed {
    lotte = "lotte",
    samsung = "samsung",
    lg = "lg"
}
export enum CreateDogDtoBreed {
    lotte = "lotte",
    samsung = "samsung",
    lg = "lg"
}
export enum ApiPaths {
    CatsController_create = "/cats",
    CatsController_findOne = "/cats/{id}",
    DogsController_findAll = "/dogs",
    DogsController_create = "/dogs",
    DogsController_findOne = "/dogs/{id}",
    DogsController_update = "/dogs/{id}",
    DogsController_remove = "/dogs/{id}",
    HumansController_create = "/humans",
    HumansController_findAll = "/humans",
    HumansController_findOne = "/humans/{id}",
    HumansController_update = "/humans/{id}",
    HumansController_remove = "/humans/{id}"
}
